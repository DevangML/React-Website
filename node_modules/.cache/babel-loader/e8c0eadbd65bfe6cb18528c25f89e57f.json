{"ast":null,"code":"var _jsxFileName = \"/home/devangm/Documents/Projects/ETP/HTML-Repo/React Site/React-Website/src/components/SmoothScroll/SmoothScroll.js\";\nimport React, { useEffect, useRef } from \"react\";\nimport \"./SmoothScroll.css\";\nimport useWindowSize from \"../../hooks/useWindowSize\";\n\nconst SmoothScroll = ({\n  children\n}) => {\n  // 1.\n  const windowSize = useWindowSize(); //2.\n\n  const scrollingContainerRef = useRef(); // 3.\n\n  const data = {\n    ease: 0.1,\n    current: 0,\n    previous: 0,\n    rounded: 0\n  }; // 4.\n\n  useEffect(() => {\n    setBodyHeight();\n  }, [windowSize.height]);\n\n  const setBodyHeight = () => {\n    document.body.style.height = `${scrollingContainerRef.current.getBoundingClientRect().height}px`;\n  }; // 5.\n\n\n  useEffect(() => {\n    requestAnimationFrame(() => smoothScrollingHandler());\n  }, []);\n\n  const smoothScrollingHandler = () => {\n    data.current = window.scrollY;\n    data.previous += (data.current - data.previous) * data.ease;\n    data.rounded = Math.round(data.previous * 100) / 100;\n    scrollingContainerRef.current.style.transform = `translateY(-${data.previous}px)`; // Recursive call\n\n    requestAnimationFrame(() => smoothScrollingHandler());\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"parent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    ref: scrollingContainerRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, children));\n};\n\nexport default SmoothScroll;","map":{"version":3,"sources":["/home/devangm/Documents/Projects/ETP/HTML-Repo/React Site/React-Website/src/components/SmoothScroll/SmoothScroll.js"],"names":["React","useEffect","useRef","useWindowSize","SmoothScroll","children","windowSize","scrollingContainerRef","data","ease","current","previous","rounded","setBodyHeight","height","document","body","style","getBoundingClientRect","requestAnimationFrame","smoothScrollingHandler","window","scrollY","Math","round","transform"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAyC,OAAzC;AAEA,OAAO,oBAAP;AACA,OAAOC,aAAP,MAA0B,2BAA1B;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AACrC;AACA,QAAMC,UAAU,GAAGH,aAAa,EAAhC,CAFqC,CAIrC;;AACA,QAAMI,qBAAqB,GAAGL,MAAM,EAApC,CALqC,CAOrC;;AACA,QAAMM,IAAI,GAAG;AACXC,IAAAA,IAAI,EAAE,GADK;AAEXC,IAAAA,OAAO,EAAE,CAFE;AAGXC,IAAAA,QAAQ,EAAE,CAHC;AAIXC,IAAAA,OAAO,EAAE;AAJE,GAAb,CARqC,CAerC;;AACAX,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,aAAa;AACd,GAFQ,EAEN,CAACP,UAAU,CAACQ,MAAZ,CAFM,CAAT;;AAIA,QAAMD,aAAa,GAAG,MAAM;AAC1BE,IAAAA,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBH,MAApB,GAA8B,GAC5BP,qBAAqB,CAACG,OAAtB,CAA8BQ,qBAA9B,GAAsDJ,MACvD,IAFD;AAGD,GAJD,CApBqC,CA0BrC;;;AACAb,EAAAA,SAAS,CAAC,MAAM;AACdkB,IAAAA,qBAAqB,CAAC,MAAMC,sBAAsB,EAA7B,CAArB;AACD,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMA,sBAAsB,GAAG,MAAM;AACnCZ,IAAAA,IAAI,CAACE,OAAL,GAAeW,MAAM,CAACC,OAAtB;AACAd,IAAAA,IAAI,CAACG,QAAL,IAAiB,CAACH,IAAI,CAACE,OAAL,GAAeF,IAAI,CAACG,QAArB,IAAiCH,IAAI,CAACC,IAAvD;AACAD,IAAAA,IAAI,CAACI,OAAL,GAAeW,IAAI,CAACC,KAAL,CAAWhB,IAAI,CAACG,QAAL,GAAgB,GAA3B,IAAkC,GAAjD;AAEAJ,IAAAA,qBAAqB,CAACG,OAAtB,CAA8BO,KAA9B,CAAoCQ,SAApC,GAAiD,eAAcjB,IAAI,CAACG,QAAS,KAA7E,CALmC,CAOnC;;AACAQ,IAAAA,qBAAqB,CAAC,MAAMC,sBAAsB,EAA7B,CAArB;AACD,GATD;;AAWA,sBACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,GAAG,EAAEb,qBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkCF,QAAlC,CADF,CADF;AAKD,CA/CD;;AAiDA,eAAeD,YAAf","sourcesContent":["import React, { useEffect, useRef } from \"react\";\n\nimport \"./SmoothScroll.css\";\nimport useWindowSize from \"../../hooks/useWindowSize\";\n\nconst SmoothScroll = ({ children }) => {\n  // 1.\n  const windowSize = useWindowSize();\n\n  //2.\n  const scrollingContainerRef = useRef();\n\n  // 3.\n  const data = {\n    ease: 0.1,\n    current: 0,\n    previous: 0,\n    rounded: 0,\n  };\n\n  // 4.\n  useEffect(() => {\n    setBodyHeight();\n  }, [windowSize.height]);\n\n  const setBodyHeight = () => {\n    document.body.style.height = `${\n      scrollingContainerRef.current.getBoundingClientRect().height\n    }px`;\n  };\n\n  // 5.\n  useEffect(() => {\n    requestAnimationFrame(() => smoothScrollingHandler());\n  }, []);\n\n  const smoothScrollingHandler = () => {\n    data.current = window.scrollY;\n    data.previous += (data.current - data.previous) * data.ease;\n    data.rounded = Math.round(data.previous * 100) / 100;\n\n    scrollingContainerRef.current.style.transform = `translateY(-${data.previous}px)`;\n\n    // Recursive call\n    requestAnimationFrame(() => smoothScrollingHandler());\n  };\n\n  return (\n    <div className=\"parent\">\n      <div ref={scrollingContainerRef}>{children}</div>\n    </div>\n  );\n};\n\nexport default SmoothScroll;"]},"metadata":{},"sourceType":"module"}